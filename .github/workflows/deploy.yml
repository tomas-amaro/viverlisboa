name: Build and Deploy to Cloudflare Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  discover-domains:
    runs-on: ubuntu-latest
    outputs:
      domains: ${{ steps.discover.outputs.domains }}
      domain-configs: ${{ steps.discover.outputs.domain-configs }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8.15.1

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.10.0'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Discover domains from Sanity
      id: discover
      env:
        NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ vars.NEXT_PUBLIC_SANITY_PROJECT_ID }}
        NEXT_PUBLIC_SANITY_DATASET: ${{ vars.NEXT_PUBLIC_SANITY_DATASET }}
        NEXT_PUBLIC_SANITY_API_VERSION: ${{ vars.NEXT_PUBLIC_SANITY_API_VERSION }}
        SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      run: |
        echo "🔍 Discovering domains from Sanity..."
        DISCOVERY_OUTPUT=$(node scripts/discover-domains.js --json 2>/dev/null)
        DOMAINS=$(echo "$DISCOVERY_OUTPUT" | jq -c '.domains')
        DOMAIN_CONFIGS=$(echo "$DISCOVERY_OUTPUT" | jq -c '.domainConfigs')
        
        echo "domains=$DOMAINS" >> $GITHUB_OUTPUT
        echo "domain-configs=$DOMAIN_CONFIGS" >> $GITHUB_OUTPUT
        
        echo "Found domains: $DOMAINS"

  build-and-deploy:
    needs: discover-domains
    runs-on: ubuntu-latest
    if: ${{ fromJson(needs.discover-domains.outputs.domains)[0] }}
    strategy:
      matrix:
        domain: ${{ fromJson(needs.discover-domains.outputs.domains) }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8.15.1

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.10.0'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Install Wrangler
      run: pnpm add -g wrangler

    - name: Type check
      run: pnpm type-check

    - name: Lint
      run: pnpm lint

    - name: Build domain-specific site
      env:
        CAMPAIGN_DOMAIN: ${{ matrix.domain }}
        NODE_ENV: production
        NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ vars.NEXT_PUBLIC_SANITY_PROJECT_ID }}
        NEXT_PUBLIC_SANITY_DATASET: ${{ vars.NEXT_PUBLIC_SANITY_DATASET }}
        NEXT_PUBLIC_SANITY_API_VERSION: ${{ vars.NEXT_PUBLIC_SANITY_API_VERSION }}
        SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
      run: node scripts/build-domain.js ${{ matrix.domain }}

    - name: Deploy to Cloudflare Pages
      env:
        NODE_ENV: production
        NEXT_BUILD_TYPE: static
        NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ vars.NEXT_PUBLIC_SANITY_PROJECT_ID }}
        NEXT_PUBLIC_SANITY_DATASET: ${{ vars.NEXT_PUBLIC_SANITY_DATASET }}
        NEXT_PUBLIC_SANITY_API_VERSION: ${{ vars.NEXT_PUBLIC_SANITY_API_VERSION }}
        SANITY_API_TOKEN: ${{ secrets.SANITY_API_TOKEN }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
      run: node scripts/deploy-cloudflare.js ${{ matrix.domain }} production



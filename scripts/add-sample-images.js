#!/usr/bin/env node

/**
 * Script para adicionar imagens de exemplo aos blocos da p√°gina "Como Apoiar"
 * Usa imagens de placeholder para demonstrar funcionalidades visuais
 */

const { createClient } = require('@sanity/client');
require('dotenv').config({ path: '.env.local' });

const client = createClient({
  projectId: process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,
  dataset: process.env.NEXT_PUBLIC_SANITY_DATASET || 'production',
  apiVersion: '2024-01-01',
  token: process.env.SANITY_API_TOKEN,
  useCdn: false,
});

async function uploadPlaceholderImage(width, height, text) {
  try {
    const imageUrl = `https://via.placeholder.com/${width}x${height}/48B9CA/FFFFFF?text=${encodeURIComponent(text)}`;
    
    // Fazer download da imagem
    const response = await fetch(imageUrl);
    const buffer = await response.arrayBuffer();
    
    // Upload para Sanity
    const asset = await client.assets.upload('image', Buffer.from(buffer), {
      filename: `${text.toLowerCase().replace(/\s+/g, '-')}.png`
    });
    
    return asset._id;
  } catch (error) {
    console.warn(`‚ö†Ô∏è  Erro ao fazer upload da imagem "${text}":`, error.message);
    return null;
  }
}

async function addSampleImages() {
  try {
    console.log('üñºÔ∏è  Adicionando imagens de exemplo √† p√°gina "Como Apoiar"...');

    // Buscar a p√°gina "apoiar"
    const page = await client.fetch(
      '*[_type == "page" && slug.current == "apoiar"][0]'
    );

    if (!page) {
      throw new Error('P√°gina "apoiar" n√£o encontrada. Execute primeiro o script create-apoiar-page.js');
    }

    console.log('üìÑ P√°gina encontrada, adicionando imagens...');

    // Upload das imagens de exemplo
    console.log('‚¨ÜÔ∏è  Fazendo upload das imagens...');
    
    const heroImageId = await uploadPlaceholderImage(1920, 1080, 'Campanha+Politica');
    const voluntariosImageId = await uploadPlaceholderImage(800, 600, 'Voluntarios');
    const eventoImageId = await uploadPlaceholderImage(400, 300, 'Evento+1');
    const equipaImageId = await uploadPlaceholderImage(400, 300, 'Equipa');
    const comicioImageId = await uploadPlaceholderImage(400, 300, 'Comicio');

    // Atualizar o conte√∫do da p√°gina com as imagens
    const updatedContent = page.content.map(block => {
      // Hero Block - adicionar imagem de fundo
      if (block._key === 'hero-apoiar' && heroImageId) {
        return {
          ...block,
          backgroundImage: {
            _type: 'image',
            asset: {
              _type: 'reference',
              _ref: heroImageId
            },
            alt: 'Campanha pol√≠tica - pessoas unidas por uma causa'
          }
        };
      }

      // Image Block - volunt√°rios
      if (block._key === 'voluntarios-image' && voluntariosImageId) {
        return {
          ...block,
          image: {
            _type: 'image',
            asset: {
              _type: 'reference',
              _ref: voluntariosImageId
            },
            alt: 'Volunt√°rios da campanha em a√ß√£o',
            caption: 'A nossa equipa de volunt√°rios trabalhando pela comunidade'
          }
        };
      }

      // Gallery Block - momentos da campanha
      if (block._key === 'momentos-campanha') {
        const images = [];
        
        if (eventoImageId) {
          images.push({
            _type: 'image',
            _key: 'evento-1',
            asset: {
              _type: 'reference',
              _ref: eventoImageId
            },
            alt: 'Evento de lan√ßamento da campanha',
            caption: 'Lan√ßamento oficial da campanha'
          });
        }

        if (equipaImageId) {
          images.push({
            _type: 'image',
            _key: 'equipa-1',
            asset: {
              _type: 'reference',
              _ref: equipaImageId
            },
            alt: 'Equipa de campanha',
            caption: 'Nossa dedicada equipa de trabalho'
          });
        }

        if (comicioImageId) {
          images.push({
            _type: 'image',
            _key: 'comicio-1',
            asset: {
              _type: 'reference',
              _ref: comicioImageId
            },
            alt: 'Com√≠cio no centro da cidade',
            caption: 'Com√≠cio com a participa√ß√£o da comunidade'
          });
        }

        return {
          ...block,
          images
        };
      }

      return block;
    });

    // Atualizar a p√°gina
    const result = await client
      .patch(page._id)
      .set({ content: updatedContent })
      .commit();

    console.log('‚úÖ Imagens adicionadas com sucesso!');
    console.log(`üìÑ P√°gina atualizada: ${result._id}`);
    
    console.log('\nüñºÔ∏è  Imagens adicionadas:');
    if (heroImageId) console.log('  ‚Ä¢ Hero Block: Imagem de fundo da campanha');
    if (voluntariosImageId) console.log('  ‚Ä¢ Image Block: Volunt√°rios em a√ß√£o');
    if (eventoImageId) console.log('  ‚Ä¢ Gallery: Evento de lan√ßamento');
    if (equipaImageId) console.log('  ‚Ä¢ Gallery: Equipa de campanha');
    if (comicioImageId) console.log('  ‚Ä¢ Gallery: Com√≠cio p√∫blico');

    console.log('\nüé® Agora todos os blocos visuais t√™m conte√∫do de exemplo!');
    console.log('üîó Acesse /apoiar para ver o resultado completo.');

  } catch (error) {
    console.error('‚ùå Erro ao adicionar imagens:', error.message);
    process.exit(1);
  }
}

// Executar o script
if (require.main === module) {
  addSampleImages();
}

module.exports = { addSampleImages };
